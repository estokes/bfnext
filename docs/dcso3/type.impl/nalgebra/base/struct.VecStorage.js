(function() {
    var type_impls = Object.fromEntries([["nalgebra",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#impl-Clone-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#impl-Debug-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#54-62\">Source</a><a href=\"#impl-Default-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#55-61\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VecStorage%3CT,+Dyn,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#34-42\">Source</a><a href=\"#impl-Default-for-VecStorage%3CT,+Dyn,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#35-41\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#64-72\">Source</a><a href=\"#impl-Default-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#65-71\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#44-52\">Source</a><a href=\"#impl-Default-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#45-51\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'a%3E-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#90-114\">Source</a><a href=\"#impl-Deserialize%3C'a%3E-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, R, C&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt;,\n    R: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    C: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt; + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#96-113\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;Des&gt;(deserializer: Des) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Des::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    Des: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'a>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#478-489\">Source</a><a href=\"#impl-Extend%3C%26T%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#486-488\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class=\"docblock\"><p>Extends the number of columns of the <code>VecStorage</code> with elements\nfrom the given iterator.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics if the number of elements yielded by the\ngiven iterator is not a multiple of the number of rows of the\n<code>VecStorage</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CMatrix%3CT,+RV,+Const%3C1%3E,+SV%3E%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#491-517\">Source</a><a href=\"#impl-Extend%3CMatrix%3CT,+RV,+Const%3C1%3E,+SV%3E%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, RV, SV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, RV, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SV&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,\n    R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    RV: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    SV: <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, RV&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.SameNumberOfRows.html\" title=\"trait nalgebra::base::constraint::SameNumberOfRows\">SameNumberOfRows</a>&lt;R, RV&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#506-516\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"nalgebra/base/type.Vector.html\" title=\"type nalgebra::base::Vector\">Vector</a>&lt;T, RV, SV&gt;&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class=\"docblock\"><p>Extends the number of columns of the <code>VecStorage</code> with vectors\nfrom the given iterator.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics if the number of rows of each <code>Vector</code>\nyielded by the iterator is not equal to the number of rows\nof this <code>VecStorage</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<Matrix<T, RV, Const<1>, SV>>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-VecStorage%3CT,+Dyn,+Const%3C1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#519-526\">Source</a><a href=\"#impl-Extend%3CT%3E-for-VecStorage%3CT,+Dyn,+Const%3C1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#522-525\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class=\"docblock\"><p>Extends the number of rows of the <code>VecStorage</code> with elements\nfrom the given iterator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#462-476\">Source</a><a href=\"#impl-Extend%3CT%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#470-475\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class=\"docblock\"><p>Extends the number of columns of the <code>VecStorage</code> with elements\nfrom the given iterator.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics if the number of elements yielded by the\ngiven iterator is not a multiple of the number of rows of the\n<code>VecStorage</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#impl-PartialEq-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawStorage%3CT,+Dyn,+C%3E-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#235-263\">Source</a><a href=\"#impl-RawStorage%3CT,+Dyn,+C%3E-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.RStride\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#236\">Source</a><a href=\"#associatedtype.RStride\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.RStride\" class=\"associatedtype\">RStride</a> = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;</h4></section></summary><div class='docblock'>The static stride of this storage’s rows.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CStride\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#237\">Source</a><a href=\"#associatedtype.CStride\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.CStride\" class=\"associatedtype\">CStride</a> = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a></h4></section></summary><div class='docblock'>The static stride of this storage’s columns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#240-242\">Source</a><a href=\"#method.ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.ptr\" class=\"fn\">ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class='docblock'>The matrix data pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shape\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#245-247\">Source</a><a href=\"#method.shape\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.shape\" class=\"fn\">shape</a>(&amp;self) -&gt; (<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C)</h4></section></summary><div class='docblock'>The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\nelement of any dimension. Must be equal to <code>Self::dimension()</code> if it is not <code>None</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#250-252\">Source</a><a href=\"#method.strides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.strides\" class=\"fn\">strides</a>(&amp;self) -&gt; (Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.RStride\" title=\"type nalgebra::base::storage::RawStorage::RStride\">RStride</a>, Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.CStride\" title=\"type nalgebra::base::storage::RawStorage::CStride\">CStride</a>)</h4></section></summary><div class='docblock'>The spacing between consecutive row elements and consecutive column elements. <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.strides\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_contiguous\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#255-257\">Source</a><a href=\"#method.is_contiguous\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.is_contiguous\" class=\"fn\">is_contiguous</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether this data buffer stores its elements contiguously. <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.is_contiguous\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#260-262\">Source</a><a href=\"#method.as_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.as_slice_unchecked\" class=\"fn\">as_slice_unchecked</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Retrieves the data buffer as a contiguous slice. <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.as_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.linear_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#73-77\">Source</a><a href=\"#method.linear_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.linear_index\" class=\"fn\">linear_index</a>(&amp;self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\nindex must be such that the following holds: <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.linear_index\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked_linear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#84-86\">Source</a><a href=\"#method.get_address_unchecked_linear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked_linear\" class=\"fn\">get_address_unchecked_linear</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class='docblock'>Gets the address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked_linear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#93-95\">Source</a><a href=\"#method.get_address_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked\" class=\"fn\">get_address_unchecked</a>(&amp;self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class='docblock'>Gets the address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_linear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#102-104\">Source</a><a href=\"#method.get_unchecked_linear\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked_linear\" class=\"fn\">get_unchecked_linear</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Retrieves a reference to the i-th element without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked_linear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#111-113\">Source</a><a href=\"#method.get_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked\" class=\"fn\">get_unchecked</a>(&amp;self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Retrieves a reference to the i-th element without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked\">Read more</a></div></details></div></details>","RawStorage<T, Dyn, C>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawStorage%3CT,+R,+Dyn%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#297-325\">Source</a><a href=\"#impl-RawStorage%3CT,+R,+Dyn%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.RStride\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#298\">Source</a><a href=\"#associatedtype.RStride\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.RStride\" class=\"associatedtype\">RStride</a> = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;</h4></section></summary><div class='docblock'>The static stride of this storage’s rows.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CStride\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#299\">Source</a><a href=\"#associatedtype.CStride\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.CStride\" class=\"associatedtype\">CStride</a> = R</h4></section></summary><div class='docblock'>The static stride of this storage’s columns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#302-304\">Source</a><a href=\"#method.ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.ptr\" class=\"fn\">ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class='docblock'>The matrix data pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shape\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#307-309\">Source</a><a href=\"#method.shape\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.shape\" class=\"fn\">shape</a>(&amp;self) -&gt; (R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>)</h4></section></summary><div class='docblock'>The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\nelement of any dimension. Must be equal to <code>Self::dimension()</code> if it is not <code>None</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#312-314\">Source</a><a href=\"#method.strides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.strides\" class=\"fn\">strides</a>(&amp;self) -&gt; (Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.RStride\" title=\"type nalgebra::base::storage::RawStorage::RStride\">RStride</a>, Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.CStride\" title=\"type nalgebra::base::storage::RawStorage::CStride\">CStride</a>)</h4></section></summary><div class='docblock'>The spacing between consecutive row elements and consecutive column elements. <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.strides\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_contiguous\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#317-319\">Source</a><a href=\"#method.is_contiguous\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.is_contiguous\" class=\"fn\">is_contiguous</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether this data buffer stores its elements contiguously. <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.is_contiguous\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#322-324\">Source</a><a href=\"#method.as_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.as_slice_unchecked\" class=\"fn\">as_slice_unchecked</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Retrieves the data buffer as a contiguous slice. <a href=\"nalgebra/base/storage/trait.RawStorage.html#tymethod.as_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.linear_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#73-77\">Source</a><a href=\"#method.linear_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.linear_index\" class=\"fn\">linear_index</a>(&amp;self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\nindex must be such that the following holds: <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.linear_index\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked_linear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#84-86\">Source</a><a href=\"#method.get_address_unchecked_linear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked_linear\" class=\"fn\">get_address_unchecked_linear</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class='docblock'>Gets the address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked_linear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#93-95\">Source</a><a href=\"#method.get_address_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked\" class=\"fn\">get_address_unchecked</a>(&amp;self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class='docblock'>Gets the address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_address_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_linear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#102-104\">Source</a><a href=\"#method.get_unchecked_linear\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked_linear\" class=\"fn\">get_unchecked_linear</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Retrieves a reference to the i-th element without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked_linear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#111-113\">Source</a><a href=\"#method.get_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked\" class=\"fn\">get_unchecked</a>(&amp;self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Retrieves a reference to the i-th element without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorage.html#method.get_unchecked\">Read more</a></div></details></div></details>","RawStorage<T, R, Dyn>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawStorageMut%3CT,+Dyn,+C%3E-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#364-374\">Source</a><a href=\"#impl-RawStorageMut%3CT,+Dyn,+C%3E-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorageMut.html\" title=\"trait nalgebra::base::storage::RawStorageMut\">RawStorageMut</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#366-368\">Source</a><a href=\"#method.ptr_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#tymethod.ptr_mut\" class=\"fn\">ptr_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>The matrix mutable data pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#371-373\">Source</a><a href=\"#method.as_mut_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#tymethod.as_mut_slice_unchecked\" class=\"fn\">as_mut_slice_unchecked</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Retrieves the mutable data buffer as a contiguous slice. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#tymethod.as_mut_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked_linear_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#177-179\">Source</a><a href=\"#method.get_address_unchecked_linear_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_linear_mut\" class=\"fn\">get_address_unchecked_linear_mut</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Gets the mutable address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_linear_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#186-189\">Source</a><a href=\"#method.get_address_unchecked_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_mut\" class=\"fn\">get_address_unchecked_mut</a>(&amp;mut self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Gets the mutable address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_linear_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#195-197\">Source</a><a href=\"#method.get_unchecked_linear_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_linear_mut\" class=\"fn\">get_unchecked_linear_mut</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Retrieves a mutable reference to the i-th element without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_linear_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#204-206\">Source</a><a href=\"#method.get_unchecked_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_mut\" class=\"fn\">get_unchecked_mut</a>(&amp;mut self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Retrieves a mutable reference to the element at <code>(irow, icol)</code> without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_unchecked_linear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#220-236\">Source</a><a href=\"#method.swap_unchecked_linear\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked_linear\" class=\"fn\">swap_unchecked_linear</a>(&amp;mut self, i1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, i2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Swaps two elements using their linear index without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked_linear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#243-248\">Source</a><a href=\"#method.swap_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked\" class=\"fn\">swap_unchecked</a>(\n    &amp;mut self,\n    row_col1: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>),\n    row_col2: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>),\n)</h4></section></summary><div class='docblock'>Swaps two elements without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked\">Read more</a></div></details></div></details>","RawStorageMut<T, Dyn, C>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawStorageMut%3CT,+R,+Dyn%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#414-424\">Source</a><a href=\"#impl-RawStorageMut%3CT,+R,+Dyn%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorageMut.html\" title=\"trait nalgebra::base::storage::RawStorageMut\">RawStorageMut</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ptr_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#416-418\">Source</a><a href=\"#method.ptr_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#tymethod.ptr_mut\" class=\"fn\">ptr_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>The matrix mutable data pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#421-423\">Source</a><a href=\"#method.as_mut_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#tymethod.as_mut_slice_unchecked\" class=\"fn\">as_mut_slice_unchecked</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Retrieves the mutable data buffer as a contiguous slice. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#tymethod.as_mut_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked_linear_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#177-179\">Source</a><a href=\"#method.get_address_unchecked_linear_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_linear_mut\" class=\"fn\">get_address_unchecked_linear_mut</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Gets the mutable address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_linear_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_address_unchecked_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#186-189\">Source</a><a href=\"#method.get_address_unchecked_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_mut\" class=\"fn\">get_address_unchecked_mut</a>(&amp;mut self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class='docblock'>Gets the mutable address of the i-th matrix component without performing bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_address_unchecked_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_linear_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#195-197\">Source</a><a href=\"#method.get_unchecked_linear_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_linear_mut\" class=\"fn\">get_unchecked_linear_mut</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Retrieves a mutable reference to the i-th element without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_linear_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#204-206\">Source</a><a href=\"#method.get_unchecked_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_mut\" class=\"fn\">get_unchecked_mut</a>(&amp;mut self, irow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, icol: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Retrieves a mutable reference to the element at <code>(irow, icol)</code> without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.get_unchecked_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_unchecked_linear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#220-236\">Source</a><a href=\"#method.swap_unchecked_linear\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked_linear\" class=\"fn\">swap_unchecked_linear</a>(&amp;mut self, i1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, i2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Swaps two elements using their linear index without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked_linear\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/storage.rs.html#243-248\">Source</a><a href=\"#method.swap_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked\" class=\"fn\">swap_unchecked</a>(\n    &amp;mut self,\n    row_col1: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>),\n    row_col2: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>),\n)</h4></section></summary><div class='docblock'>Swaps two elements without bound-checking. <a href=\"nalgebra/base/storage/trait.RawStorageMut.html#method.swap_unchecked\">Read more</a></div></details></div></details>","RawStorageMut<T, R, Dyn>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReshapableStorage%3CT,+Dyn,+C1,+Dyn,+C2%3E-for-VecStorage%3CT,+Dyn,+C1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#378-394\">Source</a><a href=\"#impl-ReshapableStorage%3CT,+Dyn,+C1,+Dyn,+C2%3E-for-VecStorage%3CT,+Dyn,+C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C1, C2&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html\" title=\"trait nalgebra::base::storage::ReshapableStorage\">ReshapableStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C1, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C2&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,\n    C1: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    C2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#384\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C2&gt;</h4></section></summary><div class='docblock'>The reshaped storage type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reshape_generic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#386-393\">Source</a><a href=\"#method.reshape_generic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#tymethod.reshape_generic\" class=\"fn\">reshape_generic</a>(self, nrows: <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, ncols: C2) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" title=\"type nalgebra::base::storage::ReshapableStorage::Output\">Output</a></h4></section></summary><div class='docblock'>Reshapes the storage into the output storage type.</div></details></div></details>","ReshapableStorage<T, Dyn, C1, Dyn, C2>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReshapableStorage%3CT,+Dyn,+C1,+R2,+Dyn%3E-for-VecStorage%3CT,+Dyn,+C1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#396-412\">Source</a><a href=\"#impl-ReshapableStorage%3CT,+Dyn,+C1,+R2,+Dyn%3E-for-VecStorage%3CT,+Dyn,+C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C1, R2&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html\" title=\"trait nalgebra::base::storage::ReshapableStorage\">ReshapableStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C1, R2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,\n    C1: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    R2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#402\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h4></section></summary><div class='docblock'>The reshaped storage type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reshape_generic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#404-411\">Source</a><a href=\"#method.reshape_generic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#tymethod.reshape_generic\" class=\"fn\">reshape_generic</a>(self, nrows: R2, ncols: <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" title=\"type nalgebra::base::storage::ReshapableStorage::Output\">Output</a></h4></section></summary><div class='docblock'>Reshapes the storage into the output storage type.</div></details></div></details>","ReshapableStorage<T, Dyn, C1, R2, Dyn>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReshapableStorage%3CT,+R1,+Dyn,+Dyn,+C2%3E-for-VecStorage%3CT,+R1,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#426-442\">Source</a><a href=\"#impl-ReshapableStorage%3CT,+R1,+Dyn,+Dyn,+C2%3E-for-VecStorage%3CT,+R1,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R1, C2&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html\" title=\"trait nalgebra::base::storage::ReshapableStorage\">ReshapableStorage</a>&lt;T, R1, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C2&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R1, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,\n    R1: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>,\n    C2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#432\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C2&gt;</h4></section></summary><div class='docblock'>The reshaped storage type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reshape_generic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#434-441\">Source</a><a href=\"#method.reshape_generic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#tymethod.reshape_generic\" class=\"fn\">reshape_generic</a>(self, nrows: <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, ncols: C2) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" title=\"type nalgebra::base::storage::ReshapableStorage::Output\">Output</a></h4></section></summary><div class='docblock'>Reshapes the storage into the output storage type.</div></details></div></details>","ReshapableStorage<T, R1, Dyn, Dyn, C2>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReshapableStorage%3CT,+R1,+Dyn,+R2,+Dyn%3E-for-VecStorage%3CT,+R1,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#444-460\">Source</a><a href=\"#impl-ReshapableStorage%3CT,+R1,+Dyn,+R2,+Dyn%3E-for-VecStorage%3CT,+R1,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R1, R2&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html\" title=\"trait nalgebra::base::storage::ReshapableStorage\">ReshapableStorage</a>&lt;T, R1, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, R2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R1, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,\n    R1: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>,\n    R2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#450\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;</h4></section></summary><div class='docblock'>The reshaped storage type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reshape_generic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#452-459\">Source</a><a href=\"#method.reshape_generic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.ReshapableStorage.html#tymethod.reshape_generic\" class=\"fn\">reshape_generic</a>(self, nrows: R2, ncols: <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.ReshapableStorage.html#associatedtype.Output\" title=\"type nalgebra::base::storage::ReshapableStorage::Output\">Output</a></h4></section></summary><div class='docblock'>Reshapes the storage into the output storage type.</div></details></div></details>","ReshapableStorage<T, R1, Dyn, R2, Dyn>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#75-87\">Source</a><a href=\"#impl-Serialize-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R, C&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    R: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    C: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#81-86\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;Ser&gt;(&amp;self, serializer: Ser) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ser::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, Ser::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    Ser: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Storage%3CT,+Dyn,+C%3E-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#265-295\">Source</a><a href=\"#impl-Storage%3CT,+Dyn,+C%3E-for-VecStorage%3CT,+Dyn,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C, Buffer&lt;T&gt; = Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#270-275\">Source</a><a href=\"#method.into_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.Storage.html#tymethod.into_owned\" class=\"fn\">into_owned</a>(self) -&gt; <a class=\"type\" href=\"nalgebra/base/storage/type.Owned.html\" title=\"type nalgebra::base::storage::Owned\">Owned</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;,</div></h4></section></summary><div class='docblock'>Builds a matrix data storage that does not contain any reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#278-283\">Source</a><a href=\"#method.clone_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.Storage.html#tymethod.clone_owned\" class=\"fn\">clone_owned</a>(&amp;self) -&gt; <a class=\"type\" href=\"nalgebra/base/storage/type.Owned.html\" title=\"type nalgebra::base::storage::Owned\">Owned</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, C&gt;,</div></h4></section></summary><div class='docblock'>Clones this data storage to one that does not contain any reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forget_elements\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#286-294\">Source</a><a href=\"#method.forget_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.Storage.html#tymethod.forget_elements\" class=\"fn\">forget_elements</a>(self)</h4></section></summary><div class='docblock'>Drops the storage without calling the destructors on the contained elements.</div></details></div></details>","Storage<T, Dyn, C>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Storage%3CT,+R,+Dyn%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#327-357\">Source</a><a href=\"#impl-Storage%3CT,+R,+Dyn%3E-for-VecStorage%3CT,+R,+Dyn%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimName.html\" title=\"trait nalgebra::base::dimension::DimName\">DimName</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt; for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, Buffer&lt;T&gt; = Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#332-337\">Source</a><a href=\"#method.into_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.Storage.html#tymethod.into_owned\" class=\"fn\">into_owned</a>(self) -&gt; <a class=\"type\" href=\"nalgebra/base/storage/type.Owned.html\" title=\"type nalgebra::base::storage::Owned\">Owned</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;,</div></h4></section></summary><div class='docblock'>Builds a matrix data storage that does not contain any reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#340-345\">Source</a><a href=\"#method.clone_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.Storage.html#tymethod.clone_owned\" class=\"fn\">clone_owned</a>(&amp;self) -&gt; <a class=\"type\" href=\"nalgebra/base/storage/type.Owned.html\" title=\"type nalgebra::base::storage::Owned\">Owned</a>&lt;T, R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;R, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>&gt;,</div></h4></section></summary><div class='docblock'>Clones this data storage to one that does not contain any reference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forget_elements\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#348-356\">Source</a><a href=\"#method.forget_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/base/storage/trait.Storage.html#tymethod.forget_elements\" class=\"fn\">forget_elements</a>(self)</h4></section></summary><div class='docblock'>Drops the storage without calling the destructors on the contained elements.</div></details></div></details>","Storage<T, R, Dyn>","nalgebra::base::vec_storage::MatrixVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#120-221\">Source</a><a href=\"#impl-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#123-129\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.new\" class=\"fn\">new</a>(nrows: R, ncols: C, data: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new dynamic matrix data storage from the given vector and shape.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#134-136\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.as_vec\" class=\"fn\">as_vec</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>The underlying data storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_vec_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#144-146\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.as_vec_mut\" class=\"fn\">as_vec_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>The underlying mutable data storage.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This is unsafe because this may cause UB if the size of the vector is changed\nby the user.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resize\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#155-194\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.resize\" class=\"fn\">resize</a>(self, sz: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/1.90.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Resizes the underlying mutable data storage and unwraps it.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<ul>\n<li>If <code>sz</code> is larger than the current size, additional elements are uninitialized.</li>\n<li>If <code>sz</code> is smaller than the current size, additional elements are truncated but <strong>not</strong> dropped.\nIt is the responsibility of the caller of this method to drop these elements.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#199-201\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The number of elements on the underlying vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#206-208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the underlying vector contains no elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#212-214\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>A slice containing all the components stored in this storage in column-major order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#218-220\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/struct.VecStorage.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>A mutable slice containing all the components stored in this storage in column-major order.</p>\n</div></details></div></details>",0,"nalgebra::base::vec_storage::MatrixVec"],["<section id=\"impl-Eq-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#impl-Eq-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section>","Eq","nalgebra::base::vec_storage::MatrixVec"],["<section id=\"impl-IsContiguous-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#376\">Source</a><a href=\"#impl-IsContiguous-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"nalgebra/base/storage/trait.IsContiguous.html\" title=\"trait nalgebra::base::storage::IsContiguous\">IsContiguous</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section>","IsContiguous","nalgebra::base::vec_storage::MatrixVec"],["<section id=\"impl-StructuralPartialEq-for-VecStorage%3CT,+R,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/vec_storage.rs.html#27\">Source</a><a href=\"#impl-StructuralPartialEq-for-VecStorage%3CT,+R,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>, C: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt;</h3></section>","StructuralPartialEq","nalgebra::base::vec_storage::MatrixVec"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[109408]}